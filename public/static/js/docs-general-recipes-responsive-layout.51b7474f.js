(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{"./components/Hint.jsx":function(e,n,a){"use strict";var t=a("./node_modules/react/index.js"),o=a.n(t);function r(){var e=function(e,n){n||(n=e.slice(0));return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(n)}}))}(["\n  margin: 2rem 0;\n  padding: 1rem;\n  background-color: ",";\n  border: 0;\n  border-style: solid;\n  border-color: rgb(56, 132, 255);\n  border-left-width: 3px;\n  border-radius: 3px;\n"]);return r=function(){return e},e}var i=a("./node_modules/styled-components/dist/styled-components.browser.esm.js").a.div(r(),function(e){switch(e.variant){case"success":return"rgb(245, 247, 249)";default:return"rgb(245, 247, 249);"}}),m=function(e){var n=e.variant,a=e.children;return o.a.createElement(i,{variant:n},a)};n.a=m,m.__docgenInfo={description:"",methods:[],displayName:"Hint"}},"./docs/general/recipes/responsive-layout.mdx":function(e,n,a){"use strict";a.r(n),a.d(n,"default",function(){return u});var t=a("./node_modules/react/index.js"),o=a.n(t),r=a("./node_modules/@mdx-js/tag/dist/index.js"),i=a("./components/Hint.jsx");function m(e){return(m="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function p(e,n){if(null==e)return{};var a,t,o=function(e,n){if(null==e)return{};var a,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||(o[a]=e[a]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)a=r[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}function s(e,n){for(var a=0;a<n.length;a++){var t=n[a];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(e,t.key,t)}}function l(e,n){return!n||"object"!==m(n)&&"function"!==typeof n?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):n}function c(e){return(c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function d(e,n){return(d=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}var u=function(e){function n(e){var a;return function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),(a=l(this,c(n).call(this,e))).layout=null,a}var a,t,m;return function(e,n){if("function"!==typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&d(e,n)}(n,o.a.Component),a=n,(t=[{key:"render",value:function(){var e=this.props,n=e.components;p(e,["components"]);return o.a.createElement(r.MDXTag,{name:"wrapper",components:n},o.a.createElement(r.MDXTag,{name:"h1",components:n,props:{id:"responsive-layout"}},"Responsive layout"),o.a.createElement(r.MDXTag,{name:"p",components:n},o.a.createElement(r.MDXTag,{name:"strong",components:n,parentName:"p"},"Any responsive layout consists of two essential parts:")),o.a.createElement(r.MDXTag,{name:"ol",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Conditional ","(","responsive",")"," areas;"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ol"},"Conditional props assignment ","(",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"gutter"),", ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"margin"),", etc.",")",";")),o.a.createElement(r.MDXTag,{name:"p",components:n},"In this section we are going to take a look at how to implement these fundamentals using Atomic layout library. Make sure to be familiar with the basics of Atomic layout before continue reading."),o.a.createElement(r.MDXTag,{name:"p",components:n},'{% page-ref page="../getting-started/" %}'),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"responsive-areas"}},"Responsive areas"),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"declaration"}},"Declaration"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Any grid area that is not present in all template declarations automatically becomes responsive."),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"const templateMobile = `\n  thumbnail\n  heading\n  subheading\n`\n\nconst templateDesktop = `\n  thumbnail heading\n  thumbnail subheading\n  thumbnail meta\n`\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"We have two template declarations above: one for mobile and one for desktop screens. Areas ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"thumbnail"),", ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"heading")," and ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"subheading")," are present in both template declarations. However, the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"meta")," area is declared in ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"templateDesktop")," only. This makes ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"meta")," a conditional area."),o.a.createElement(i.a,null,"Note that template declaration alone has no effect over responsive area rendering. Make sure to supply the template declaration to the respective template prop."),o.a.createElement(r.MDXTag,{name:"h3",components:n,props:{id:"breakpoints"}},"Breakpoints"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Having different areas in different template declarations only signifies conditional areas. In order to control the breakpoints where those areas are rendered, we need to pass templates declarations to the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"template")," props of the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Composition")," component:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},"import React from 'react'\nimport { Composition } from 'atomic-layout'\n\nconst templateMobile = `\n  thumbnail\n  heading\n  subheading\n`\n\nconst templateDesktop = `\n  thumbnail heading\n  thumbnail subheading\n  thumbnail meta\n`\n\nconst Card = () => (\n  <Composition template={templateMobile} templateLg={templateDesktop}>\n    {({ Thumbnail, Heading, Subheading, Meta }) => (\n      <>\n        <Thumbnail>I am rendered always</Thumbnail>\n        <Heading>I am rendered always</Heading>\n        <Subheading>I am rendered always</Subheading>\n        <Meta>I am rendered on \"lg\" breakpoint and up!</Meta>\n      </>\n    )}\n  </Composition>\n)\n\nexport default Card\n")),o.a.createElement(r.MDXTag,{name:"p",components:n},"The composition above will wrap ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Meta")," grid area in a ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"<MediaQuery/>")," component from ",o.a.createElement(r.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"https://github.com/contra/react-responsive"}},"react-responsive"),". This area will render on ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"lg"),' breakpoint and up, because there is no succeeding template declaration that would contradict that, and because "up" is the default responsive behavior.'),o.a.createElement(r.MDXTag,{name:"h2",components:n,props:{id:"responsive-props"}},"Responsive props"),o.a.createElement(r.MDXTag,{name:"p",components:n},"Any prop name suffixed with a breakpoint name is a responsive prop. It implies that the prop's value will be applied on the given breakpoint."),o.a.createElement(r.MDXTag,{name:"p",components:n},'{% page-ref page="../../fundamentals/responsive-props.md" %}'),o.a.createElement(r.MDXTag,{name:"p",components:n},"We have already used a responsive prop in the example above. By suffixing ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"template")," with the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"Lg"),", we stated that the given value must be applied on the ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"lg")," breakpoint and up. Following this example, let's create a different gutter between the grid areas on different breakpoints:"),o.a.createElement(r.MDXTag,{name:"pre",components:n},o.a.createElement(r.MDXTag,{name:"code",components:n,parentName:"pre",props:{className:"language-jsx"}},'<Composition\n  template={templateMobile}\n  templateLg={templateDesktop}\n  gutter={10}\n  gutterLg={20}\n>\n  {({ Thumbnail, Heading, Subheading, Meta }) => (\n    <React.Fragment>\n      <Thumbnail>I am rendered always</Thumbnail>\n      <Heading>I am rendered always</Heading>\n      <Subheading>I am rendered always</Subheading>\n      <Meta>I am rendered on "lg" breakpoint and up!</Meta>\n    </React.Fragment>\n  )}\n</Composition>\n')),o.a.createElement(r.MDXTag,{name:"p",components:n},"There are two props we have added: ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"gutter")," and ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"gutterLg"),"."),o.a.createElement(r.MDXTag,{name:"ul",components:n},o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"gutter")," adds a ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"grid-gap")," of ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"10px")," on mobile screens, since ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"xs")," is the default breakpoint,"),o.a.createElement(r.MDXTag,{name:"li",components:n,parentName:"ul"},o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"gutterLg")," adds a ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"grid-gap")," of ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"20px")," on large screens and up, since ",o.a.createElement(r.MDXTag,{name:"inlineCode",components:n,parentName:"li"},"up")," is the default behavior.")),o.a.createElement(i.a,null,"You can configure"," ",o.a.createElement("a",{href:"fundamentals/breakpoints#custom-breakpoints"},"custom breakpoints"),", default breakpoint and default behavior. Responsive props will abide by your settings."))}}])&&s(a.prototype,t),m&&s(a,m),n}();u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}}}]);
//# sourceMappingURL=docs-general-recipes-responsive-layout.5fd4b2fe77f74c6e4639.js.map